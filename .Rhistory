nrow = grid.lines, ncol = grid.lines)
scatter3D(x1, x2, y,  cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1))
tree_model <- randomForest(yf~x1+x2,ntree=1)
yt.pred <- 1-matrix(predict(tree_model,type="prob", newdata = x1x2),
nrow = grid.lines, ncol = grid.lines)
scatter3D(x1, x2, y,  cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1))
tree_model <- randomForest(yf~x1+x2,ntree=1)
yt.pred <- 1-matrix(predict(tree_model,type="prob", newdata = x1x2),
nrow = grid.lines, ncol = grid.lines)
scatter3D(x1, x2, y,  cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1))
tree_model <- randomForest(yf~x1+x2,ntree=1)
yt.pred <- 1-matrix(predict(tree_model,type="prob", newdata = x1x2),
nrow = grid.lines, ncol = grid.lines)
scatter3D(x1, x2, y,  cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1))
tree_model <- randomForest(yf~x1+x2,ntree=1)
yt.pred <- 1-matrix(predict(tree_model,type="prob", newdata = x1x2),
nrow = grid.lines, ncol = grid.lines)
scatter3D(x1, x2, y,  cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1))
tree_model <- randomForest(yf~x1+x2,ntree=1)
yt.pred <- 1-matrix(predict(tree_model,type="prob", newdata = x1x2),
nrow = grid.lines, ncol = grid.lines)
scatter3D(x1, x2, y,  cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1))
tree_model <- randomForest(yf~x1+x2,ntree=1)
yt.pred <- 1-matrix(predict(tree_model,type="prob", newdata = x1x2),
nrow = grid.lines, ncol = grid.lines)
scatter3D(x1, x2, y,  cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1))
tree_model <- randomForest(yf~x1+x2,ntree=1000)
yt.pred <- 1-matrix(predict(tree_model,type="prob", newdata = x1x2),
nrow = grid.lines, ncol = grid.lines)
scatter3D(x1, x2, y,  cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1))
tree_model <- randomForest(yf~x1+x2,ntree=1000)
yt.pred <- 1-matrix(predict(tree_model,type="prob", newdata = x1x2),
nrow = grid.lines, ncol = grid.lines)
scatter3D(x1, x2, y,  cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1))
tree_model <- randomForest(yf~x1+x2,ntree=1000)
yt.pred <- 1-matrix(predict(tree_model,type="prob", newdata = x1x2),
nrow = grid.lines, ncol = grid.lines)
scatter3D(x1, x2, y,  cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1))
install.packages("ImageMagick")
install.packages("magick")
library(magick)
tiger <- image_read_svg('http://jeroen.github.io/images/tiger.svg', width = 400)
print(tiger)
install.packages("rsvg")
library(magick)
tiger <- image_read_svg('http://jeroen.github.io/images/tiger.svg', width = 400)
print(tiger)
install.packages("fftw")
png(file="example%03d.png", width=300, heigh=300)
for (i in seq(0, 10 , 1)){
tree_model <- randomForest(yf~x1+x2,ntree=1)
yt.pred <- 1-matrix(predict(tree_model,type="prob", newdata = x1x2),
nrow = grid.lines, ncol = grid.lines)
print(
scatter3D(x1, x2, y,  cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1))
)
}
dev.off()
# convert pngs to one gif using ImageMagick
system("convert -delay 40 *.png example_2_reduced.gif")
png(file="example%03d.png", width=3000, heigh=3000)
for (i in seq(0, 50 , 1)){
tree_model <- randomForest(yf~x1+x2,ntree=1)
yt.pred <- 1-matrix(predict(tree_model,type="prob", newdata = x1x2),
nrow = grid.lines, ncol = grid.lines)
print(
scatter3D(x1, x2, y,  cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1))
)
}
dev.off()
# convert pngs to one gif using ImageMagick
system("convert -delay 40 *.png example_2_reduced.gif")
png(file="example%03d.png", width=300, heigh=300)
for (i in seq(0, 200 , 1)){
tree_model <- randomForest(yf~x1+x2,ntree=1)
yt.pred <- 1-matrix(predict(tree_model,type="prob", newdata = x1x2),
nrow = grid.lines, ncol = grid.lines)
print(
scatter3D(x1, x2, y,  cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1))
)
}
dev.off()
# convert pngs to one gif using ImageMagick
system("convert -delay 40 *.png example_2_reduced.gif")
png(file="example%03d.png", width=500, heigh=500)
for (i in seq(0, 200 , 1)){
tree_model <- randomForest(yf~x1+x2,ntree=1)
yt.pred <- 1-matrix(predict(tree_model,type="prob", newdata = x1x2),
nrow = grid.lines, ncol = grid.lines)
print(
scatter3D(x1, x2, y,  cex = 5, cex.lab=5.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1))
)
}
dev.off()
# convert pngs to one gif using ImageMagick
system("convert -delay 40 *.png example_2_reduced.gif")
png(file="example%03d.png", width=500, heigh=500)
for (i in seq(0, 200 , 1)){
tree_model <- randomForest(yf~x1+x2,ntree=1)
yt.pred <- 1-matrix(predict(tree_model,type="prob", newdata = x1x2),
nrow = grid.lines, ncol = grid.lines)
print(
scatter3D(x1, x2, y,  cex = 2, cex.lab=2.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1))
)
}
dev.off()
system("convert -delay 40 *.png DT.gif")
png(file="example%03d.png", width=700, heigh=700)
for (i in seq(0, 200 , 1)){
tree_model <- randomForest(yf~x1+x2,ntree=1)
yt.pred <- 1-matrix(predict(tree_model,type="prob", newdata = x1x2),
nrow = grid.lines, ncol = grid.lines)
print(
scatter3D(x1, x2, y,  cex = 2, cex.lab=2.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1))
)
}
dev.off()
# convert pngs to one gif using ImageMagick
system("convert -delay 40 *.png DT.gif")
# cleaning up
file.remove(list.files(pattern=".png"))
png(file="example%03d.png", width=700, heigh=700)
for (i in seq(0, 1000 , 10)){
tree_model <- randomForest(yf~x1+x2,ntree=i)
yt.pred <- 1-matrix(predict(tree_model,type="prob", newdata = x1x2),
nrow = grid.lines, ncol = grid.lines)
print(
scatter3D(x1, x2, y,  cex = 2, cex.lab=2.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1))
)
}
dev.off()
# convert pngs to one gif using ImageMagick
system("convert -delay 40 *.png RF.gif")
# cleaning up
file.remove(list.files(pattern=".png"))
i
png(file="example%03d.png", width=700, heigh=700)
for (i in seq(1, 1000 , 10)){
tree_model <- randomForest(yf~x1+x2,ntree=i)
yt.pred <- 1-matrix(predict(tree_model,type="prob", newdata = x1x2),
nrow = grid.lines, ncol = grid.lines)
print(
scatter3D(x1, x2, y,  cex = 2, cex.lab=2.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1))
)
}
dev.off()
# convert pngs to one gif using ImageMagick
system("convert -delay 40 *.png RF.gif")
# cleaning up
file.remove(list.files(pattern=".png"))
seq(1, 1000 , 10)
png(file="example%03d.png", width=700, heigh=700)
for (i in c(seq(1,15,1),seq(20,1000, 10))){
tree_model <- randomForest(yf~x1+x2,ntree=i)
yt.pred <- 1-matrix(predict(tree_model,type="prob", newdata = x1x2),
nrow = grid.lines, ncol = grid.lines)
print(
scatter3D(x1, x2, y,  cex = 2, cex.lab=2.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1))
)
}
dev.off()
# convert pngs to one gif using ImageMagick
system("convert -delay 40 *.png RF.gif")
# cleaning up
file.remove(list.files(pattern=".png"))
png(file="example%03d.png", width=700, heigh=700)
for (i in c(seq(1,15,1),seq(20,1000, 10))){
tree_model <- randomForest(yf~x1+x2,ntree=i)
yt.pred <- 1-matrix(predict(tree_model,type="prob", newdata = x1x2),
nrow = grid.lines, ncol = grid.lines)
print(
scatter3D(x1, x2, y,  cex = 2, cex.lab=2.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
main = paste(i,"~Trees"),
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1))
)
}
dev.off()
# convert pngs to one gif using ImageMagick
system("convert -delay 40 *.png RF.gif")
# cleaning up
file.remove(list.files(pattern=".png"))
png(file="example%03d.png", width=700, heigh=700)
for (i in c(seq(1,15,1),seq(20,1000, 10))){
tree_model <- randomForest(yf~x1+x2,ntree=i)
yt.pred <- 1-matrix(predict(tree_model,type="prob", newdata = x1x2),
nrow = grid.lines, ncol = grid.lines)
print(
scatter3D(x1, x2, y,  cex = 3, cex.lab=2.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
main = paste(i," Trees"),
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1))
)
}
dev.off()
# convert pngs to one gif using ImageMagick
system("convert -delay 40 *.png RF.gif")
# cleaning up
file.remove(list.files(pattern=".png"))
png(file="example%03d.png", width=700, heigh=700)
for (i in c(seq(1,15,1),seq(20,1000, 10))){
tree_model <- randomForest(yf~x1+x2,ntree=i)
yt.pred <- 1-matrix(predict(tree_model,type="prob", newdata = x1x2),
nrow = grid.lines, ncol = grid.lines)
print(
scatter3D(x1, x2, y,  cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
main = paste(i," Trees"),
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1))
)
}
dev.off()
# convert pngs to one gif using ImageMagick
system("convert -delay 40 *.png RF.gif")
# cleaning up
file.remove(list.files(pattern=".png"))
png(file="example%03d.png", width=700, heigh=700)
for (i in c(seq(1,15,1),seq(20,1000, 10))){
tree_model <- randomForest(yf~x1+x2,ntree=1)
yt.pred <- 1-matrix(predict(tree_model,type="prob", newdata = x1x2),
nrow = grid.lines, ncol = grid.lines)
print(
scatter3D(x1, x2, y,  cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
main = paste(i," Trees"),
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1))
)
}
dev.off()
# convert pngs to one gif using ImageMagick
system("convert -delay 40 *.png DT.gif")
# cleaning up
file.remove(list.files(pattern=".png"))
install.packages("neuralnet")
require(neuralnet)
neuralnet(yf~x1+x2,linear.output=FALSE)
yf
neuralnet(yf~x1+x2,linear.output=FALSE)
ann_model <- neuralnet(y~x1+x2,data=ann_data,linear.output=FALSE)
ann_data <- data.frame(y,x1,x1)
ann_model <- neuralnet(y~x1+x2,data=ann_data,linear.output=FALSE)
ann_model
predict(ann_model,type="prob", newdata = x1x2)
predict(ann_model, newdata = x1x2)
prediction(ann_model, newdata = x1x2)
ompute(ann_model, newdata = x1x2)
compute(ann_model, newdata = x1x2)
compute(ann_model, newdata = x1x2)
compute(ann_model, x1x2)
ann_model <- neuralnet(y~x1+x2,data=ann_data,hidden=1,
act.fct="tanh")
yt.pred <- matrix(compute(ann_model, x1x2)$net.result,
nrow = grid.lines, ncol = grid.lines)
scatter3D(x1, x2, y,  cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
main = paste(i," Trees"),
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1)
)
compute(ann_model, x1x2)$net.result
ann_model <- neuralnet(y~x1+x2,data=ann_data,hidden=1,linear.output = F,
act.fct="tanh")
yt.pred <- matrix(compute(ann_model, x1x2)$net.result,
nrow = grid.lines, ncol = grid.lines)
scatter3D(x1, x2, y,  cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
main = paste(i," Trees"),
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1)
)
ann_model <- neuralnet(y~x1+x2,data=ann_data,hidden=1,linear.output = F)
yt.pred <- matrix(compute(ann_model, x1x2)$net.result,
nrow = grid.lines, ncol = grid.lines)
scatter3D(x1, x2, y,  cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
main = paste(i," Trees"),
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1)
)
yt.pred <- matrix(compute(ann_model, x1x2)$net.result,
nrow = grid.lines, ncol = grid.lines)
scatter3D(x1, x2, y,  cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1)
)
net <- neuralnet(AND+OR~Var1+Var2+Var3,  binary.data, hidden=3,
rep=10, err.fct="ce", linear.output=FALSE)
ann_data <- data.frame(y,x1,x1)
ann_model <- neuralnet(y~x1+x2,data=ann_data,hidden=1,linear.output = F)
yt.pred <- matrix(compute(ann_model, x1x2)$net.result,
nrow = grid.lines, ncol = grid.lines)
scatter3D(x1, x2, y,  cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1)
)
ann_data <- data.frame(y,x1,x1)
ann_model <- neuralnet(y~x1+x2,data=ann_data,hidden=3,linear.output = F)
yt.pred <- matrix(compute(ann_model, x1x2)$net.result,
nrow = grid.lines, ncol = grid.lines)
scatter3D(x1, x2, y,  cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 80, phi = 30, ticktype = "detailed",col="red",bty = "u",
xlab="x1",
ylab="x2",
zlab="y",
expand =0.6,
colkey = FALSE,
surf = list(x = x1.pred, y = x2.pred, z = yt.pred,col = viridis(200), shade = 0.35,
lwd=0.5,lty=1)
)
